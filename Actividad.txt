1. Create a new FirstApp
Component

2. Return a new title into h1
tag and a text “10” into
one span tag

3. Import and Deploy
FirstApp

ACTIVIDAD 2

Create two news buttons
handleSubstract and
handleReset
2. Implement handleSubsstract
by substracting from counter
3. Implement handleReset by
setting counter as default
value
4. Use useState hook to show
working buttons into the web.

ACTIVIDAD 3

. Add a new input tag to write some
text, use onChange event to get
changes on input
2. Handle above input with useState
hook to setCategory
3. Send event variable to setCategory
function to get value from input
4. Add a new Button to add categories
5. Use useState hook to addCategories
to the list with onClick event button.
6. Inside above item, call setCategory
to clear input field after add one
category

CHALLENGE
1. Invoke getGifs function inside a new function in
GifGrid Component, keep in mind, it’s an async
function
2. Invoke new function from above to get list of images,
use a useState hook to handle the list.
3. Print in console, inside new function, list of Gifs you
got from getGifs function
4. Use useEffect hook to call new function created in
point 2.
5. Print title of each category into the web page, use a
div tag to group printed list.
6. Add a className attribute to div tag to use some
styles
7. Create a new GifItem component to handle print of
each title
8. Send by props, each category data to GifItem


CHALLENGE
1. Create a new customHook
called useCounter
2. Implement followed methods to
handle counter:
1. Increment
2. Decrement
3. Reset
3. Use above hook into your
current component

CHALLENGE
1. Create a new customHook
called useFetch
2. Implements fetch api which
receives any url and returns data
from fetch when it changes, as
follow:
{
data: null,
isLoading: true,
hasError: null
}
* Use needed Hooks to make it works